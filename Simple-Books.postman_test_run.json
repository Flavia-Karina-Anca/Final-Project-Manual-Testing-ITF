{
	"id": "98edaa85-41d5-4d41-b1ff-cd6c5185c1f4",
	"name": "Simple Books",
	"timestamp": "2023-05-25T12:04:37.078Z",
	"collection_id": "26355828-43a1d7b0-fe67-43da-bc57-84a5f0b4c5f2",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 43,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2023-05-25T12:04:28.056Z",
	"totalFail": 17,
	"results": [
		{
			"id": "182747f3-bedb-4738-8061-39378ae27846",
			"name": "Return the status of the API",
			"url": "https://simple-books-api.glitch.me/status",
			"time": 191,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status should be OK": true,
				"Response time is less than 200ms": true
			},
			"testPassFailCounts": {
				"Status should be OK": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 200ms": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				191
			],
			"allTests": [
				{
					"Status should be OK": true,
					"Response time is less than 200ms": true
				}
			]
		},
		{
			"id": "8dad866e-be35-4b50-9bf8-05fe9c2e83af",
			"name": "Return a list of books by type and limit",
			"url": "https://simple-books-api.glitch.me/books?type=fiction&limit=5",
			"time": 132,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Verify that the body matches string 'fiction'": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the body matches string 'fiction'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				132
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Verify that the body matches string 'fiction'": true
				}
			]
		},
		{
			"id": "c013d5f5-7e14-4cc0-a496-49f35d8382b8",
			"name": "Get a book by ID",
			"url": "https://simple-books-api.glitch.me/books/1",
			"time": 140,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Verify that it returns a book by ID": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Verify that it returns a book by ID": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				140
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Verify that it returns a book by ID": true
				}
			]
		},
		{
			"id": "e679974b-9c95-463e-8fea-9c2756a3484e",
			"name": "Return a list of books by type - capital letters parameter",
			"url": "https://simple-books-api.glitch.me/books?type=FICTION",
			"time": 139,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 200": false,
				"Testing json response": false
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 0,
					"fail": 1
				},
				"Testing json response": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				139
			],
			"allTests": [
				{
					"Status code is 200": false,
					"Testing json response": false
				}
			]
		},
		{
			"id": "2cfb2e39-220b-4c0c-b50a-c83c252890e9",
			"name": "Register API client",
			"url": "https://simple-books-api.glitch.me/api-clients/",
			"time": 332,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code is 201": true,
				"Successful POST request": true
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"Successful POST request": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				332
			],
			"allTests": [
				{
					"Status code is 201": true,
					"Successful POST request": true
				}
			]
		},
		{
			"id": "495381a0-a111-4cf3-8093-d7b384b80602",
			"name": "Order a book",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 337,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code is 201": true,
				"Verify that the body matches string 'true'": true
			},
			"testPassFailCounts": {
				"Status code is 201": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the body matches string 'true'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				337
			],
			"allTests": [
				{
					"Status code is 201": true,
					"Verify that the body matches string 'true'": true
				}
			]
		},
		{
			"id": "45a5d8c8-5d69-4620-b743-10990f7cbbf7",
			"name": "View all orders",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 223,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Response time is less than 230ms": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 230ms": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				223
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Response time is less than 230ms": true
				}
			]
		},
		{
			"id": "9fc26f96-127b-404f-b70b-ffaf56d547ef",
			"name": "Get a book order",
			"url": "https://simple-books-api.glitch.me/orders/6OvXfAdfLoGbC2eb-xept",
			"time": 270,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 200": true,
				"Verify the customer name for one book order": true
			},
			"testPassFailCounts": {
				"Status code is 200": {
					"pass": 1,
					"fail": 0
				},
				"Verify the customer name for one book order": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				270
			],
			"allTests": [
				{
					"Status code is 200": true,
					"Verify the customer name for one book order": true
				}
			]
		},
		{
			"id": "00b0a9d8-5c98-4679-95bf-3eb2f22bbfa8",
			"name": "Update a book order",
			"url": "https://simple-books-api.glitch.me/orders/6OvXfAdfLoGbC2eb-xept",
			"time": 404,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Status code is 204": true,
				"Status code name returns 'No Content', but is successful": true
			},
			"testPassFailCounts": {
				"Status code is 204": {
					"pass": 1,
					"fail": 0
				},
				"Status code name returns 'No Content', but is successful": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				404
			],
			"allTests": [
				{
					"Status code is 204": true,
					"Status code name returns 'No Content', but is successful": true
				}
			]
		},
		{
			"id": "0a221245-8150-4cd0-b90a-d74b1a02745b",
			"name": "Delete a book order",
			"url": "https://simple-books-api.glitch.me/orders/oa4oHpllt8RGWr3hljEWX",
			"time": 334,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Status code is 204": true,
				"Response time is less than 300ms": false
			},
			"testPassFailCounts": {
				"Status code is 204": {
					"pass": 1,
					"fail": 0
				},
				"Response time is less than 300ms": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				334
			],
			"allTests": [
				{
					"Status code is 204": true,
					"Response time is less than 300ms": false
				}
			]
		},
		{
			"id": "5a09d4fe-ab5e-4ddf-899c-f79cfc2835fe",
			"name": "Get a book by ID - invalid book ID",
			"url": "https://simple-books-api.glitch.me/books/7",
			"time": 309,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Status code is 404": true,
				"Verify that the body matches string 'error'": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the body matches string 'error'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				309
			],
			"allTests": [
				{
					"Status code is 404": true,
					"Verify that the body matches string 'error'": true
				}
			]
		},
		{
			"id": "476cc812-6d76-4b57-854b-0743cdd91d40",
			"name": "Return a list of books by type - invalid parameter",
			"url": "https://simple-books-api.glitch.me/books?type=20",
			"time": 249,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify error message for invalif parameter": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for invalif parameter": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				249
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify error message for invalif parameter": true
				}
			]
		},
		{
			"id": "b1116ecc-a1af-4c50-bc76-12b2fe5aa949",
			"name": "Return a list of books by limit - invalid parameter",
			"url": "https://simple-books-api.glitch.me/books?limit=fiction",
			"time": 202,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 400": false,
				"Verify that body matches string 'invalid value'": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify that body matches string 'invalid value'": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				202
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify that body matches string 'invalid value'": false
				}
			]
		},
		{
			"id": "88408669-5ea2-44b0-8495-d0f8889dc25c",
			"name": "Return a list of books by limit - invalid limit (21)",
			"url": "https://simple-books-api.glitch.me/books?limit=21",
			"time": 134,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify error message for invalid limit": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for invalid limit": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				134
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify error message for invalid limit": true
				}
			]
		},
		{
			"id": "97a81e98-fc50-4ba3-8645-c86e465d7e90",
			"name": "Return a list of books by limit - invalid limit (-1)",
			"url": "https://simple-books-api.glitch.me/books?limit=-1",
			"time": 132,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify error message for invalid limit": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for invalid limit": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				132
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify error message for invalid limit": true
				}
			]
		},
		{
			"id": "a8c223be-4372-4a00-9cae-9efe85046902",
			"name": "Return a list of books by limit - invalid limit (0)",
			"url": "https://simple-books-api.glitch.me/books?limit=0",
			"time": 132,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Status code is 400": false,
				"Verify error message for invalid limit": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify error message for invalid limit": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				132
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify error message for invalid limit": false
				}
			]
		},
		{
			"id": "79ea5de8-825d-4ffa-9c31-faba60c16276",
			"name": "Register API client -  empty client name field",
			"url": "https://simple-books-api.glitch.me/api-clients/",
			"time": 131,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify error message for missing client name": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for missing client name": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				131
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify error message for missing client name": true
				}
			]
		},
		{
			"id": "991fe174-a6a1-476e-bbb6-b5f40f458894",
			"name": "Register API client - empty client e-mail field",
			"url": "https://simple-books-api.glitch.me/api-clients/",
			"time": 129,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify error message for missing client email": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for missing client email": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				129
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify error message for missing client email": true
				}
			]
		},
		{
			"id": "46771909-c078-4c6e-89fd-310f4352d03f",
			"name": "Register API client - empty client name and e-mail fields",
			"url": "https://simple-books-api.glitch.me/api-clients/",
			"time": 129,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify error message for missing client name and email": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for missing client name and email": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				129
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify error message for missing client name and email": true
				}
			]
		},
		{
			"id": "80da6c6a-c4fb-4ce6-81d2-1f819ee916c2",
			"name": "Order a book that is not available",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 130,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Status code is 404": true,
				"Verify error message for ordering a book that is not available": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				},
				"Verify error message for ordering a book that is not available": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				130
			],
			"allTests": [
				{
					"Status code is 404": true,
					"Verify error message for ordering a book that is not available": true
				}
			]
		},
		{
			"id": "4c1be32b-5722-441c-a169-d873e8ffff7f",
			"name": "Order a book  - invalid book ID",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 131,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verifying that the body matches string 'invalid or missing bookID'": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verifying that the body matches string 'invalid or missing bookID'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				131
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verifying that the body matches string 'invalid or missing bookID'": true
				}
			]
		},
		{
			"id": "534d401e-013a-4d08-9e98-d5ecca36dd6e",
			"name": "Order a book  - invalid authentication token",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 175,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Status code is 401": true,
				"Status code name 'Unauthorized'": true
			},
			"testPassFailCounts": {
				"Status code is 401": {
					"pass": 1,
					"fail": 0
				},
				"Status code name 'Unauthorized'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				175
			],
			"allTests": [
				{
					"Status code is 401": true,
					"Status code name 'Unauthorized'": true
				}
			]
		},
		{
			"id": "a0acc7f6-f56d-465b-9453-d3d00135aae7",
			"name": "Order a book  - phone number in the customer name field",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 250,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code is 400": false,
				"Verify that the body matches string 'Invalid customer name'": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify that the body matches string 'Invalid customer name'": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				250
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify that the body matches string 'Invalid customer name'": false
				}
			]
		},
		{
			"id": "8cac173d-9e1f-48e8-b45c-f3cc56f159a1",
			"name": "Order a book  - empty customer name field",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 401,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Status code is 400": false,
				"Verify that the body matches string 'Invalid or missing customer name'": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify that the body matches string 'Invalid or missing customer name'": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				401
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify that the body matches string 'Invalid or missing customer name'": false
				}
			]
		},
		{
			"id": "9d8fa1b3-07f1-426a-b3e9-c9446707102d",
			"name": "Order a book  - empty book ID and customer name fields",
			"url": "https://simple-books-api.glitch.me/orders",
			"time": 472,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Status code is 400": true,
				"Verify that the body matches string 'Invalid or missing bookId.'": true
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the body matches string 'Invalid or missing bookId.'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				472
			],
			"allTests": [
				{
					"Status code is 400": true,
					"Verify that the body matches string 'Invalid or missing bookId.'": true
				}
			]
		},
		{
			"id": "3bc7625a-621f-495b-859a-e480dca795c9",
			"name": "Update a book order -  image file in the customer name field",
			"url": "https://simple-books-api.glitch.me/orders/ew15gRawGI3WpQYnS8NMk",
			"time": 139,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Status code is 400": false,
				"Verify that the body matches string 'Invalid customer name'": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify that the body matches string 'Invalid customer name'": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				139
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify that the body matches string 'Invalid customer name'": false
				}
			]
		},
		{
			"id": "b412535c-d23c-45a5-96f0-93d5c22fa0ae",
			"name": "Update a book order - number in the customer name field",
			"url": "https://simple-books-api.glitch.me/orders/XKFjTwAyudJCa3SlmB4J_",
			"time": 256,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Status code is 400": false,
				"Verify that the body matches string 'Invalid customer name'": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify that the body matches string 'Invalid customer name'": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				256
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify that the body matches string 'Invalid customer name'": false
				}
			]
		},
		{
			"id": "cf784fe6-6f75-4f7a-9a9c-c91c9e56e735",
			"name": "Update a book order - empty customer name field",
			"url": "https://simple-books-api.glitch.me/orders/XKFjTwAyudJCa3SlmB4J_",
			"time": 313,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Status code is 400": false,
				"Verify that the body matches string 'Invalid or missing customer name'": false
			},
			"testPassFailCounts": {
				"Status code is 400": {
					"pass": 0,
					"fail": 1
				},
				"Verify that the body matches string 'Invalid or missing customer name'": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				313
			],
			"allTests": [
				{
					"Status code is 400": false,
					"Verify that the body matches string 'Invalid or missing customer name'": false
				}
			]
		},
		{
			"id": "27209646-c3a9-4e53-9518-13200c7285f4",
			"name": "Update a book order that does not exist",
			"url": "https://simple-books-api.glitch.me/orders/Qjdjh0pOtVhdc8R793BNe",
			"time": 174,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Status code is 404": true,
				"Verify that the body matches string 'no order with id []'": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the body matches string 'no order with id []'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				174
			],
			"allTests": [
				{
					"Status code is 404": true,
					"Verify that the body matches string 'no order with id []'": true
				}
			]
		},
		{
			"id": "214647da-9776-4a7a-ae9f-ea1b4f373ba4",
			"name": "Delete a book order that does not exist",
			"url": "https://simple-books-api.glitch.me/orders/BrHlvMpVMTEbcxgo3I9Ni",
			"time": 132,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Status code is 404": true,
				"Verify that the body matches string 'no order with id []'": true
			},
			"testPassFailCounts": {
				"Status code is 404": {
					"pass": 1,
					"fail": 0
				},
				"Verify that the body matches string 'no order with id []'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				132
			],
			"allTests": [
				{
					"Status code is 404": true,
					"Verify that the body matches string 'no order with id []'": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 6622,
	"collection": {
		"requests": [
			{
				"id": "182747f3-bedb-4738-8061-39378ae27846",
				"method": "GET"
			},
			{
				"id": "8dad866e-be35-4b50-9bf8-05fe9c2e83af",
				"method": "GET"
			},
			{
				"id": "c013d5f5-7e14-4cc0-a496-49f35d8382b8",
				"method": "GET"
			},
			{
				"id": "e679974b-9c95-463e-8fea-9c2756a3484e",
				"method": "GET"
			},
			{
				"id": "2cfb2e39-220b-4c0c-b50a-c83c252890e9",
				"method": "POST"
			},
			{
				"id": "495381a0-a111-4cf3-8093-d7b384b80602",
				"method": "POST"
			},
			{
				"id": "45a5d8c8-5d69-4620-b743-10990f7cbbf7",
				"method": "GET"
			},
			{
				"id": "9fc26f96-127b-404f-b70b-ffaf56d547ef",
				"method": "GET"
			},
			{
				"id": "00b0a9d8-5c98-4679-95bf-3eb2f22bbfa8",
				"method": "PATCH"
			},
			{
				"id": "0a221245-8150-4cd0-b90a-d74b1a02745b",
				"method": "DELETE"
			},
			{
				"id": "5a09d4fe-ab5e-4ddf-899c-f79cfc2835fe",
				"method": "GET"
			},
			{
				"id": "476cc812-6d76-4b57-854b-0743cdd91d40",
				"method": "GET"
			},
			{
				"id": "b1116ecc-a1af-4c50-bc76-12b2fe5aa949",
				"method": "GET"
			},
			{
				"id": "88408669-5ea2-44b0-8495-d0f8889dc25c",
				"method": "GET"
			},
			{
				"id": "97a81e98-fc50-4ba3-8645-c86e465d7e90",
				"method": "GET"
			},
			{
				"id": "a8c223be-4372-4a00-9cae-9efe85046902",
				"method": "GET"
			},
			{
				"id": "79ea5de8-825d-4ffa-9c31-faba60c16276",
				"method": "POST"
			},
			{
				"id": "991fe174-a6a1-476e-bbb6-b5f40f458894",
				"method": "POST"
			},
			{
				"id": "46771909-c078-4c6e-89fd-310f4352d03f",
				"method": "POST"
			},
			{
				"id": "80da6c6a-c4fb-4ce6-81d2-1f819ee916c2",
				"method": "POST"
			},
			{
				"id": "4c1be32b-5722-441c-a169-d873e8ffff7f",
				"method": "POST"
			},
			{
				"id": "534d401e-013a-4d08-9e98-d5ecca36dd6e",
				"method": "POST"
			},
			{
				"id": "a0acc7f6-f56d-465b-9453-d3d00135aae7",
				"method": "POST"
			},
			{
				"id": "8cac173d-9e1f-48e8-b45c-f3cc56f159a1",
				"method": "POST"
			},
			{
				"id": "9d8fa1b3-07f1-426a-b3e9-c9446707102d",
				"method": "POST"
			},
			{
				"id": "3bc7625a-621f-495b-859a-e480dca795c9",
				"method": "PATCH"
			},
			{
				"id": "b412535c-d23c-45a5-96f0-93d5c22fa0ae",
				"method": "PATCH"
			},
			{
				"id": "cf784fe6-6f75-4f7a-9a9c-c91c9e56e735",
				"method": "PATCH"
			},
			{
				"id": "27209646-c3a9-4e53-9518-13200c7285f4",
				"method": "PATCH"
			},
			{
				"id": "214647da-9776-4a7a-ae9f-ea1b4f373ba4",
				"method": "DELETE"
			}
		]
	}
}